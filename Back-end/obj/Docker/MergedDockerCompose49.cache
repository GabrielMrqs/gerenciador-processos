name: dockercompose13888579607277439763
services:
  gerenciadorprocessos.api:
    build:
      context: C:\Users\Gabriel\Documents\Stage\Back-end
      dockerfile: GerenciadorProcessos.API/Dockerfile
    container_name: gerenciadorprocessos.api
    depends_on:
      postgres:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_URLS: http://+:80
      CONNECTIONSTRINGS__POSTGRES: User ID=postgres;Password=postgres;Server=postgres;Port=5432;Database=stage;
    image: gerenciadorprocessosapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "9000"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Gabriel\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Gabriel\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  gerenciadorprocessos.front:
    container_name: gerenciadorprocessos.front
    environment:
      API_URL: https://localhost:9000
    image: gabrielmarx/gerenciador-processos-front
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4000
        published: "4200"
        protocol: tcp
  pgadmin:
    container_name: pgadmin
    depends_on:
      postgres:
        condition: service_started
        required: true
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8888"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: pgadmin
        target: /var/lib/pgadmin
        volume: {}
  postgres:
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
        volume: {}
networks:
  default:
    name: dockercompose13888579607277439763_default
volumes:
  pgadmin:
    name: dockercompose13888579607277439763_pgadmin
  postgres:
    name: dockercompose13888579607277439763_postgres